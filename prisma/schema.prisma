// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER 
  ADMIN 
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String?
  avatar    String?
  role      Role     @default(USER)
  refreshToken String?
  tasks     Task[]
  isEmailConfirmed Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id        String   @id @default(cuid())
  token     String
  code      String
  email     String  
  expiresAt DateTime
  @@unique([email, token])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String
  email     String  
  expiresAt DateTime
  @@unique([email, token])
}

model AuthToken {
  id        String   @id @default(cuid())
  token     String
  userId    String
  expiresAt DateTime
  @@unique([userId, token])
}

model Task {
  id        Int   @id @default(autoincrement())
  title     String
  description String
  isCompleted DateTime? @map("is_completed")
  user      User     @relation(fields: [userId], references: [id])
  userId    String  @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt

  @@map("tasks")
}